version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: ./legalbot/Dockerfile
    image: app
    command: /start
    volumes:
      - .:/app
      - /var/www/static/:/var/www/static/
      - ./certbot/conf:/etc/letsencrypt:ro
    ports:
      - 8000:8000
    env_file:
      - ./.env/
    depends_on:
      - mongodb
      - db


  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  mongodb:
    image: mongodb/mongodb-community-server
    volumes:
      - mongo_data:/var/lib/mongodb/data/
    
    
  celery_worker:
    build:
      context: .
      dockerfile: ./legalbot/Dockerfile
    image: celery_worker
    command: /start-celeryworker
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - mongodb
      - db

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/www/static/:/var/www/static/
      - ./nginx/conf.d/:/etc/nginx/conf.d/:ro
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf:/etc/letsencrypt:ro
    depends_on:
      - web

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    depends_on:
      - nginx

volumes:
  postgres_data:
  mongo_data:
